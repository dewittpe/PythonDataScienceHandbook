# first part of this is derived from https://github.com/ContinuumIO/docker-images/blob/master/anaconda3/alpine/Dockerfile
FROM alpine:3.9 as alpine-glibc

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH

RUN ALPINE_GLIBC_BASE_URL="https://github.com/sgerrand/alpine-pkg-glibc/releases/download" && \
    ALPINE_GLIBC_PACKAGE_VERSION="2.28-r0" && \
    ALPINE_GLIBC_BASE_PACKAGE_FILENAME="glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk" && \
    ALPINE_GLIBC_BIN_PACKAGE_FILENAME="glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk" && \
    ALPINE_GLIBC_I18N_PACKAGE_FILENAME="glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk" && \
    apk add --no-cache --virtual=.build-dependencies wget ca-certificates && \
    echo \
        "-----BEGIN PUBLIC KEY-----\
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApZ2u1KJKUu/fW4A25y9m\
        y70AGEa/J3Wi5ibNVGNn1gT1r0VfgeWd0pUybS4UmcHdiNzxJPgoWQhV2SSW1JYu\
        tOqKZF5QSN6X937PTUpNBjUvLtTQ1ve1fp39uf/lEXPpFpOPL88LKnDBgbh7wkCp\
        m2KzLVGChf83MS0ShL6G9EQIAUxLm99VpgRjwqTQ/KfzGtpke1wqws4au0Ab4qPY\
        KXvMLSPLUp7cfulWvhmZSegr5AdhNw5KNizPqCJT8ZrGvgHypXyiFvvAH5YRtSsc\
        Zvo9GI2e2MaZyo9/lvb+LbLEJZKEQckqRj4P26gmASrZEPStwc+yqy1ShHLA0j6m\
        1QIDAQAB\
        -----END PUBLIC KEY-----" | sed 's/   */\n/g' > "/etc/apk/keys/sgerrand.rsa.pub" && \
    wget \
        "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME" \
        "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME" \
        "$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME" && \
    apk add --no-cache \
        "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME" \
        "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME" \
        "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME" && \
    \
    rm "/etc/apk/keys/sgerrand.rsa.pub" && \
    /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 "$LANG" || true && \
    echo "export LANG=$LANG" > /etc/profile.d/locale.sh && \
    \
    apk del glibc-i18n && \
    \
    rm "/root/.wget-hsts" && \
    apk del .build-dependencies && \
    rm \
        "$ALPINE_GLIBC_BASE_PACKAGE_FILENAME" \
        "$ALPINE_GLIBC_BIN_PACKAGE_FILENAME" \
        "$ALPINE_GLIBC_I18N_PACKAGE_FILENAME"

FROM alpine-glibc

ENV ANACONDA_VERSION 2020.02
ENV ANACONDA_MD5 17600d1f12b2b047b62763221f29f2bc

#    && apt-get install -y sudo pkg-config libfreetype6-dev build-essential libx11-dev neovim git wget bzip2 tree \

RUN apk add --no-cache build-base neovim git bzip2 tree bash

RUN adduser --disabled-password --gecos '' sisko
USER sisko
WORKDIR /home/sisko
RUN chmod a+rw /home/sisko
RUN git clone https://github.com/dewittpe/dotfiles
RUN cd dotfiles; bash ./init.sh

# Create non-root user, install dependencies, install Anaconda
RUN wget --quiet https://repo.continuum.io/archive/Anaconda3-$ANACONDA_VERSION-Linux-x86_64.sh -O anaconda.sh && \
    echo "${ANACONDA_MD5}  anaconda.sh" > anaconda.md5 && \
    if [ $(md5sum -c anaconda.md5 | awk '{print $2}') != "OK" ] ; then exit 1; fi && \
    sh ./anaconda.sh -b && \
    rm anaconda.sh anaconda.md5 && \
    echo ". /home/sisko/anaconda3/etc/profile.d/conda.sh" >> /home/sisko/.profile && \
    echo "conda activate base" >> /home/sisko/.profile && \
    find /home/sisko/anaconda3/ -follow -type f -name '*.a' -delete && \
    find /home/sisko/anaconda3/ -follow -type f -name '*.js.map' -delete && \
    /home/sisko/anaconda3/bin/conda update conda && \
    /home/sisko/anaconda3/bin/conda update anaconda && \
    /home/sisko/anaconda3/bin/conda update --all && \
    /home/sisko/anaconda3/bin/conda clean -afy && \
    /home/sisko/anaconda3/bin/conda init bash

# Set path to conda
ENV PATH /home/sisko/anaconda3/bin:$PATH

# Configure access to Jupyter
RUN mkdir /home/sisko/notebooks
RUN jupyter notebook --generate-config --allow-root

# # ??? what does the following line do ???
# # RUN echo "c.NotebookApp.password = u'sha1:6a3f528eec40:6e896b6e4828f525a6e20e5411cd1c8075d68619'" >> /home/ubuntu/.jupyter/jupyter_notebook_config.py

# Jupyter listens ot port 8888
EXPOSE 8888

# Make and move into a directory for *this* project
RUN mkdir /home/sisko/pdsh
WORKDIR /home/sisko/pdsh

COPY . .

RUN  conda env create -f environment.yml && \
    conda clean --all --yes